;; main contains multiple manipulators
;; each manipulator has a description and multiple rules

;; main                -> {:main [{:des "..." :rules [rule1 rule2 ...]}]}
;; manipulator         -> {:des "..." :rules [rule1 rule2 ...]}
;; manipulator's rules -> [rule1 rule2 ...]
;; define application identifiers
{
 ;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org#profiles
 :profiles
 {:goku {:default true ; 
         :alone   200 ; hold for .. ms to register single tap
         :held    50 ; 
         :delay   50 ; basically it means time after which the key press is count delayed
         :sim     30}
  }
 :templates {:open "open \"%s\""
             :alfred "osascript -e 'tell application \"Alfred 4\"
                     run trigger \"%s\" in workflow \"%s\" with argument \"%s\"
                     end tell'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\"
                 do script \"%s\"
                 end tell'"
             :application "osascript -e 'tell application \"%s\"
                          try
                          %s
                          end try
                          end tell'"
             }
 ; :layers {
 ;          :opt_mode{
 ;                    :key :left_command :alone {:key :left_option}
 ;                    }
 ;          ; :caps_mode{
 ;          ;           :key :caps_lock :alone {:key :escape}
 ;          ;           }
 ;          }
 :simlayers {;; make w key a simlayer key
             ;; layers works too, but only recommended for none typing keys
             ;; like . , tab
             ;; or keys like z, which used less often
             :0-mode {:key :0}
             :a-mode {:key :a}
             :equal-mode {:key :equal_sign}
             :f-mode {:key :f}
             :five-mode {:key :5}
             :four-mode {:key :4}
             :g-mode {:key :g}
             :q-mode {:key :q}
             :t-mode {:key :t}
             :b-mode {:key :b}
             :hyphen-mode {:key :hyphen}
             :n-mode {:key :n}
             :quote-mode {:key :quote}
             :r-mode {:key :r}
             :s-mode {:key :s}
             :semicolon-mode {:key :semicolon}
             :three-mode {:key :3}
             :tilde-mode {:key :grave_accent_and_tilde}
             :two-mode {:key :2}
             :w-mode {:key :w}
             :caps-lock-mode {:key :caps_lock}
             }
 :main [ 
        {:des   "caps_lock mode"
         :rules [:caps-lock-mode
                 [:##h :left_arrow]
                 [:##l :right_arrow]
                 [:##j :down_arrow]
                 [:##k :up_arrow]
                        ]}
        {:des   "b-mode"
         :rules [:b-mode
                 [:m [:alfred "search_bookmarks"  "dhth.bookmarks"]]
                        ]}
        {:des "shift one shot to backspace"
         :rules [
                 [:left_shift :left_shift nil {
                                               :alone :delete_or_backspace}]
                 ]
         }
        {:des   "open stuff that get opened frequently"
         :rules [:n-mode
                 [:s [:alfred "slack_status"  "dhth.slack.status"]]
                 [:v [:alfred "vim_plugins"  "dhth.vim.plugins"]]
                 ]}
        {:des   "a mode"
         :rules [:a-mode
                 [:s [:alfred "aws"  "dhth.aws"]]  ;; aws services search
                 [:c [:alfred "aws_cf_user_guide"  "dhth.aws.cloudformation.userguide"]]  ;; aws cf user guide search
                 ]}
        {:des   "t mode"
         :rules [:t-mode
                 [:a [:alfred "task_add"  "dhth.tasks"]]
                 [:l [:alfred "tasks_list"  "dhth.tasks"]]
                        ]}
        {:des   "q mode"
         :rules [:q-mode
                 [:a [:alfred "quick_task_add"  "dhth.tasks.quick"]]
                 [:l [:alfred "quick_tasks_list"  "dhth.tasks.quick"]]
                        ]}
        {:des   "s mode"
         :rules [:s-mode
                 [:v [:alfred "vim_plugins"  "dhth.vim.plugins"]]
                 [:d [:alfred "wiki_search"  "dhth.wiki.search"]]
                 [:t [:alfred "search_tools"  "dhth.tools.search"]]
                 [:p [:alfred "pomodoro_personal"  "dhth.pomodoro"]]
                 [:w [:alfred "pomodoro_work"  "dhth.pomodoro"]]
                 [:c [:alfred "search_chrome_tabs"  "com.epilande.browser-tabs"]]
                 [:o [:!Ssemicolon :s :o :spacebar :!S5]]
                 [:##h :!TOleft_arrow]
                 [:##j :!TOdown_arrow]
                 [:##k :!TOup_arrow]
                 [:##l :!TOright_arrow]
                 ]}
        {:des   "g mode"
         :rules [:g-mode
                 [:k [:!Ssemicolon :!S1 :g :o :k :u]]
                 ]}
        {:des   "open urls"
         :rules [:two-mode
                 [:n [:km "open: nikitas karabiner"]]
                 [:w [:open "http://127.0.0.1:8000"]]
                 [:e [:open "http://127.0.0.1:8001"]]
                 [:g [:open "https://github.com"]]
                 [:p [:open "https://github.com/pulls"]]
                 ]}
        {:des   "open stuff that get opened less frequently"
         :rules [:three-mode
                 [:t [:km "open: tmux_wiki"]]
                 [:c [:km "open: chrome_personal"]]
                 [:s [:km "open: setup_personal"]]
                 ]}
        {:des   "four mode"
         :rules [:four-mode
                 [:c [:km "open: chrome_work"]]
                 [:s [:km "open: setup_work"]]
                 [:j [:alfred "jira_search"  "dhth.jira"]]
                 ]}
        {:des   "w mode"
         :rules [:w-mode
                 [:e [:alfred "work_wiki_search"  "dhth.workwiki.search"]]
                 ]}
        {:des   "launch/switch to applications"
         :rules [:five-mode
                 [:p [:open "https://github.com/pulls"]]
                 [:k [:open "/Applications/Keyboard Maestro.app"]]
                 ]}
        {:des   "mouse mode"
         :rules [:tilde-mode
                 [:h [:km "mouse: move_left"]]
                 [:l [:km "mouse: move_right"]]
                 ]}
        {:des   "caps-lock mode"
         :rules [:quote-mode
                 [:l [:alfred "system_lock" "dhth.system"]]
                 [:s [:alfred "system_sleep" "dhth.system"]]
                 [:d [:alfred "dark_mode" "dhth.system"]]
                 [:a [:alfred "switch_audio" "dhth.system"]]
                 ]}
        {:des   "other stuff"
         :rules [:hyphen-mode
                 [:p [:application "spotify" "playpause"]]
                 [:open_bracket [:application "spotify" "previous track"]]
                 [:close_bracket [:application "spotify" "next track"]]
                 [:1 [:application "Google Chrome" "set the clipboard to URL of active tab of first window as text"]]
                 [:2 [:application "Google Chrome" "set the clipboard to URL of active tab of second window as text"]]
                 ]}
        {:des   "0-mode"
         :rules [:0-mode
                 [:hyphen [:application "spotify" "set sound volume to sound volume - 5"]]
                 [:equal_sign [:application "spotify" "set sound volume to sound volume + 5"]]
                        ]}
        {:des   "other stuff"
         :rules [:equal-mode
                 [:1 [:application "Google Chrome" "set the clipboard to title of active tab of first window as text"]]
                 [:2 [:application "Google Chrome" "set the clipboard to title of active tab of second window as text"]]
                 ]}
        {:des   "r mode"
         :rules [:r-mode
                 [:a [:alfred "add" "me.westerlind.alfred.raindrop-search"]]
                 [:s [:alfred "search" "me.westerlind.alfred.raindrop-search"]]
                 ]}
        {:des   "f mode"
         :rules [:f-mode
                 [:n [:!Ta :n]] ;; tmux prefix + n
                 [:p [:!Ta :p]] ;; tmux prefix + p
                 [:9 [:!Ta :!S9]] ;; tmux prefix + (
                 [:0 [:!Ta :!S0]] ;; tmux prefix + )
                 ]
         }
        {:des   "semicolon mode"
         :rules [:semicolon-mode
                 [:1 [:!Ta :1]] ;; tmux prefix + 1
                 [:2 [:!Ta :2]]
                 [:3 [:!Ta :3]]
                 [:4 [:!Ta :4]]
                 [:5 [:!Ta :5]]
                 [:c [:!Ta :c]] ;; tmux prefix + c
                 ]}
        {:des "caps lock to left control" :rules [
                                                  [:##caps_lock :##left_control nil {:alone :escape}]
                                                  ]
         }
        {:des "left control to caps lock"
         :rules [
                 [:##left_control :caps_lock]
                 ]
         }
        {:des "right option to chrome"
         :rules [
                 [:##right_option :right_option nil {:alone [:open "/Applications/Slack.app"]}]
                 ]
         }
        {:des "left option to left command"
         :rules [
                 [:##left_option :left_command nil {:alone [:open "/Applications/iTerm.app"]}]
                 ]
         }
        {:des "left command to left option"
         :rules [
                 [:##left_command :left_option nil {:alone [:open "/Applications/Google Chrome.app"]}]
                 ]
         }
        {:des "right control opens spotify"
         :rules [
                 [:##right_control :right_control nil {:alone [:open "/Applications/Spotify.app"]}]
                 ]
         }
        {:des "shift space to equals"
         :rules [
                 [{:key :spacebar :modi :left_shift} [:spacebar :equal_sign :spacebar]]
                 ; [:!Tj :down_arrow]
                 ; [:!Tk :up_arrow]
                 ; [:!Th :left_arrow]
                 ; [:!Tl :right_arrow]
                 ]
         }
        ; {:des "opt mode"
        ;  :rules [
        ;          :opt_mode
        ;          [:##h :left_arrow]
        ;          [:##j :down_arrow]
        ;          [:##k :up_arrow]
        ;          [:##l :right_arrow]
        ;          ]
        ;  }
        ]
 }
